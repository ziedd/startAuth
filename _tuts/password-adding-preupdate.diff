diff --git a/src/AppBundle/Doctrine/HashPasswordListener.php b/src/AppBundle/Doctrine/HashPasswordListener.php
index 49a15b8..b67f96f 100644
--- a/src/AppBundle/Doctrine/HashPasswordListener.php
+++ b/src/AppBundle/Doctrine/HashPasswordListener.php
@@ -23,15 +23,42 @@ class HashPasswordListener implements EventSubscriber
             return;
         }
 
-        $encoded = $this->passwordEncoder->encodePassword(
-            $entity,
-            $entity->getPlainPassword()
-        );
-        $entity->setPassword($encoded);
+        $this->encodePassword($entity);
+    }
+
+    public function preUpdate(LifecycleEventArgs $args)
+    {
+        $entity = $args->getEntity();
+        if (!$entity instanceof User) {
+            return;
+        }
+
+        $this->encodePassword($entity);
+
+        // necessary to force the update to see the change
+        $em = $args->getEntityManager();
+        $meta = $em->getClassMetadata(get_class($entity));
+        $em->getUnitOfWork()->recomputeSingleEntityChangeSet($meta, $entity);
     }
 
     public function getSubscribedEvents()
     {
         return ['prePersist', 'preUpdate'];
     }
+
+    /**
+     * @param User $entity
+     */
+    private function encodePassword(User $entity)
+    {
+        if (!$entity->getPlainPassword()) {
+            return;
+        }
+
+        $encoded = $this->passwordEncoder->encodePassword(
+            $entity,
+            $entity->getPlainPassword()
+        );
+        $entity->setPassword($encoded);
+    }
 }
